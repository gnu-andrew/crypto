diff -Nru openvpn-2.4.0.old/src/openvpn/crypto.c openvpn-2.4.0/src/openvpn/crypto.c
--- openvpn-2.4.0.old/src/openvpn/crypto.c	2016-12-26 11:51:00.000000000 +0000
+++ openvpn-2.4.0/src/openvpn/crypto.c	2017-04-04 02:29:12.932118118 +0100
@@ -937,6 +937,7 @@
             return false;
         }
 
+#ifndef OPENSSL_NO_DES
         /*
          * Check for weak or semi-weak DES keys.
          */
@@ -951,6 +952,7 @@
                 return true;
             }
         }
+#endif
     }
     return true;
 }
@@ -972,12 +974,14 @@
 #ifdef ENABLE_DEBUG
         const struct key orig = *key;
 #endif
+#ifndef OPENSSL_NO_DES
         const int ndc = key_des_num_cblocks(kt->cipher);
 
         if (ndc)
         {
             key_des_fixup(key->cipher, kt->cipher_length, ndc);
         }
+#endif
 
 #ifdef ENABLE_DEBUG
         if (check_debug_level(D_CRYPTO_DEBUG))
diff -Nru openvpn-2.4.0.old/src/openvpn/ntlm.c openvpn-2.4.0/src/openvpn/ntlm.c
--- openvpn-2.4.0.old/src/openvpn/ntlm.c	2017-04-04 02:27:41.849563836 +0100
+++ openvpn-2.4.0/src/openvpn/ntlm.c	2017-04-04 02:30:45.250558611 +0100
@@ -326,6 +326,7 @@
     }
     else         /* Generate NTLM response */
     {
+#ifndef OPENSSL_NO_DES
         unsigned char key1[DES_KEY_LENGTH], key2[DES_KEY_LENGTH], key3[DES_KEY_LENGTH];
 
         create_des_keys((unsigned char *)md4_hash, key1);
@@ -336,6 +337,9 @@
 
         create_des_keys((unsigned char *)&(md4_hash[2*(DES_KEY_LENGTH-1)]), key3);
         cipher_des_encrypt_ecb(key3, challenge, &ntlm_response[DES_KEY_LENGTH*2]);
+#else
+		return NULL;
+#endif
     }
 
 
--- a/src/openvpn/crypto_openssl.c.old	2017-04-05 04:57:57.024366074 +0100
+++ b/src/openvpn/crypto_openssl.c	2017-04-05 04:58:02.756272339 +0100
@@ -43,7 +43,9 @@
 #include "crypto.h"
 #include "crypto_backend.h"
 
+#ifndef OPENSSL_NO_DES
 #include <openssl/des.h>
+#endif
 #include <openssl/err.h>
 #include <openssl/evp.h>
 #include <openssl/objects.h>
@@ -415,6 +417,7 @@
  */
 
 
+#ifndef OPENSSL_NO_DES
 int
 key_des_num_cblocks(const EVP_CIPHER *kt)
 {
@@ -491,7 +494,7 @@
         DES_set_odd_parity(dc);
     }
 }
-
+#endif
 
 /*
  *
@@ -774,6 +776,7 @@
 #endif
 }
 
+#ifndef OPENSSL_NO_DES
 void
 cipher_des_encrypt_ecb(const unsigned char key[DES_KEY_LENGTH],
                        unsigned char *src,
@@ -784,6 +787,7 @@
     DES_set_key_unchecked((DES_cblock *)key, &sched);
     DES_ecb_encrypt((DES_cblock *)src, (DES_cblock *)dst, &sched, DES_ENCRYPT);
 }
+#endif
 
 /*
  *
