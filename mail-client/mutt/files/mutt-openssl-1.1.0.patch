--- a/mutt_ssl.c.old	2018-03-27 17:46:59.588246196 +0100
+++ b/mutt_ssl.c	2018-03-27 18:56:52.001850567 +0100
@@ -56,6 +56,12 @@
 #define HAVE_ENTROPY()	(!access(DEVRANDOM, R_OK) || entropy_byte_count >= 16)
 #endif
 
+#if OPENSSL_API_COMPAT >= 0x10100000L
+#define X509_get_notBefore X509_get0_notBefore
+#define X509_get_notAfter X509_get0_notAfter
+#define X509_STORE_CTX_get_chain X509_STORE_CTX_get0_chain
+#endif
+
 /* index for storing hostname as application specific data in SSL structure */
 static int HostExDataIndex = -1;
 
@@ -331,8 +337,12 @@
 
   /* I don't think you can do this just before reading the error. The call
    * itself might clobber the last SSL error. */
+#if OPENSSL_API_COMPAT >= 0x10100000L
+  OPENSSL_init_ssl(OPENSSL_INIT_LOAD_SSL_STRINGS, NULL);
+#else
   SSL_load_error_strings();
   SSL_library_init();
+#endif
   init_complete = 1;
   return 0;
 }
@@ -749,7 +759,7 @@
   }
 }
 
-static char *asn1time_to_string (ASN1_UTCTIME *tm)
+static char *asn1time_to_string (const ASN1_UTCTIME *tm)
 {
   static char buf[64];
   BIO *bio;
