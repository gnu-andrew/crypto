--- a/cipher-3des1.c.old	2015-03-27 13:38:49.391611470 +0000
+++ b/cipher-3des1.c	2015-03-27 13:39:28.236079166 +0000
@@ -26,6 +26,8 @@
 
 #include "ssherr.h"
 
+#ifndef OPENSSL_NO_DES
+
 /*
  * This is used by SSH1:
  *
@@ -153,3 +155,5 @@
 	ssh1_3des.flags = EVP_CIPH_CBC_MODE | EVP_CIPH_VARIABLE_LENGTH;
 	return &ssh1_3des;
 }
+
+#endif
--- a/cipher.c.old	2015-03-27 13:44:23.951638263 +0000
+++ b/cipher.c	2015-03-27 13:41:27.965520466 +0000
@@ -53,9 +53,11 @@
 
 #ifdef WITH_SSH1
 extern const EVP_CIPHER *evp_ssh1_bf(void);
+#ifndef OPENSSL_NO_DES
 extern const EVP_CIPHER *evp_ssh1_3des(void);
 extern int ssh1_3des_iv(EVP_CIPHER_CTX *, int, u_char *, int);
 #endif
+#endif
 
 /* for multi-threaded aes-ctr cipher */
 extern const EVP_CIPHER *evp_aes_ctr_mt(void);
@@ -86,20 +88,26 @@
 
 static struct sshcipher ciphers[] = {
 #ifdef WITH_SSH1
+#ifndef OPENSSL_NO_DES
 	{ "des",	SSH_CIPHER_DES, 8, 8, 0, 0, 0, 1, EVP_des_cbc },
 	{ "3des",	SSH_CIPHER_3DES, 8, 16, 0, 0, 0, 1, evp_ssh1_3des },
+#endif
 	{ "blowfish",	SSH_CIPHER_BLOWFISH, 8, 32, 0, 0, 0, 1, evp_ssh1_bf },
 #endif /* WITH_SSH1 */
 #ifdef WITH_OPENSSL
 	{ "none",	SSH_CIPHER_NONE, 8, 0, 0, 0, 0, 0, EVP_enc_null },
+#ifndef OPENSSL_NO_DES
 	{ "3des-cbc",	SSH_CIPHER_SSH2, 8, 24, 0, 0, 0, 1, EVP_des_ede3_cbc },
+#endif
 	{ "blowfish-cbc",
 			SSH_CIPHER_SSH2, 8, 16, 0, 0, 0, 1, EVP_bf_cbc },
 	{ "cast128-cbc",
 			SSH_CIPHER_SSH2, 8, 16, 0, 0, 0, 1, EVP_cast5_cbc },
+#ifndef OPENSSL_NO_RC4
 	{ "arcfour",	SSH_CIPHER_SSH2, 8, 16, 0, 0, 0, 0, EVP_rc4 },
 	{ "arcfour128",	SSH_CIPHER_SSH2, 8, 16, 0, 0, 1536, 0, EVP_rc4 },
 	{ "arcfour256",	SSH_CIPHER_SSH2, 8, 32, 0, 0, 1536, 0, EVP_rc4 },
+#endif
 	{ "aes128-cbc",	SSH_CIPHER_SSH2, 16, 16, 0, 0, 0, 1, EVP_aes_128_cbc },
 	{ "aes192-cbc",	SSH_CIPHER_SSH2, 16, 24, 0, 0, 0, 1, EVP_aes_192_cbc },
 	{ "aes256-cbc",	SSH_CIPHER_SSH2, 16, 32, 0, 0, 0, 1, EVP_aes_256_cbc },
@@ -601,9 +609,11 @@
 		break;
 #endif
 #ifdef WITH_SSH1
+#ifndef OPENSSL_NO_DES
 	case SSH_CIPHER_3DES:
 		return ssh1_3des_iv(&cc->evp, 0, iv, 24);
 #endif
+#endif
 	default:
 		return SSH_ERR_INVALID_ARGUMENT;
 	}
@@ -642,9 +652,11 @@
 		break;
 #endif
 #ifdef WITH_SSH1
+#ifndef OPENSSL_NO_DES
 	case SSH_CIPHER_3DES:
 		return ssh1_3des_iv(&cc->evp, 1, (u_char *)iv, 24);
 #endif
+#endif
 	default:
 		return SSH_ERR_INVALID_ARGUMENT;
 	}
@@ -659,7 +671,7 @@
 int
 cipher_get_keycontext(const struct sshcipher_ctx *cc, u_char *dat)
 {
-#ifdef WITH_OPENSSL
+#if defined (WITH_OPENSSL) && !defined (OPENSSL_NO_RC4)
 	const struct sshcipher *c = cc->cipher;
 	int plen = 0;
 
@@ -678,7 +690,7 @@
 void
 cipher_set_keycontext(struct sshcipher_ctx *cc, const u_char *dat)
 {
-#ifdef WITH_OPENSSL
+#if defined (WITH_OPENSSL) && !defined (OPENSSL_NO_RC4)
 	const struct sshcipher *c = cc->cipher;
 	int plen;
 
